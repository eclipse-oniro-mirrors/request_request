# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
rust_cxx("cache_core_cxx_gen") {
  sources = [ "src/wrapper.rs" ]
}

ohos_static_library("cache_core_cxx") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [
    "include",
    "../../../common/include",
    "${target_gen_dir}/src",
  ]
  sources = [
    "src/cxx/inotify_event_listener.cpp",
    "src/cxx/native_ffi.cpp",
  ]

  sources += get_target_outputs(":cache_core_cxx_gen")

  external_deps = [
    "hilog:libhilog",
    "ffrt:libffrt",
    "rust_cxx:cxx_cppdeps",
  ]
  deps = [ ":cache_core_cxx_gen" ]

  subsystem_name = "request"
  part_name = "request"
}

ohos_rust_static_library("cache_core") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  features = [ "ohos" ]

  sources = [ "src/lib.rs" ]

  deps = [
    ":cache_core_cxx",
    "../../../common/ffrt_rs:ffrt_rs",
    "../../../common/utils:request_utils",
  ]

  external_deps = [
    "hilog:libhilog",
    "hilog:hilog_rust",
    "rust_cxx:lib",
  ]

  subsystem_name = "request"
  part_name = "request"
}

ohos_rust_unittest("rust_cache_core_ut_test") {
  module_out_path = "request/request/preload"

  rustflags = [ "--cfg=feature=\"ohos\"" ]

  sources = [ "src/lib.rs" ]
  deps = [
    ":cache_core_cxx",
    "../../../common/ffrt_rs:ffrt_rs",
    "../../../common/utils:request_utils",
  ]

  external_deps = [
    "hilog:libhilog",
    "hilog:hilog_rust",
    "rust_cxx:lib",
  ]

  subsystem_name = "request"
  part_name = "request"
}

group("unittest") {
  testonly = true
  deps = [ ":rust_cache_core_ut_test" ]
}
