# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/request/request/request_aafwk.gni")
import("//build/ohos.gni")

config("upload_public_config") {
  visibility = [ ":*" ]
  include_dirs = [ "include" ]
  ldflags = [ "-Wl,--exclude-libs=ALL" ]
  cflags_cc = [ "-fno-exceptions" ]
  cflags = [
    "-fdata-sections",
    "-ffunction-sections",
    "-fvisibility=hidden",
  ]
}

ohos_shared_library("request") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  stack_protector_ret = true

  include_dirs = [
    "include",
    "../../native/include",
  ]

  public_configs = [ ":upload_public_config" ]

  sources = [
    "src/app_state_callback.cpp",
    "src/async_call.cpp",
    "src/js_initialize.cpp",
    "src/js_notify_data_listener.cpp",
    "src/js_response_listener.cpp",
    "src/js_task.cpp",
    "src/legacy/download_task.cpp",
    "src/legacy/request_manager.cpp",
    "src/listener_list.cpp",
    "src/napi_utils.cpp",
    "src/request_event.cpp",
    "src/request_module.cpp",
    "src/upload/async_call.cpp",
    "src/upload/curl_adp.cpp",
    "src/upload/file_adapter.cpp",
    "src/upload/js_util.cpp",
    "src/upload/obtain_file.cpp",
    "src/upload/upload_task.cpp",
    "src/upload/upload_task_napiV5.cpp",
    "src/utf8_utils.cpp",
    "src/uv_queue.cpp",
  ]

  deps = [
    "../../../common:request_common_static",
    "../../native:request_native",
    "//third_party/libuv:uv",
    "//third_party/openssl:libssl_shared",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:data_ability_helper",
    "ability_runtime:napi_base_context",
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_single",
    "napi:ace_napi",
    "netmanager_base:net_conn_manager_if",
    "storage_service:storage_manager_acl",
  ]

  relative_install_dir = "module"
  subsystem_name = "request"
  part_name = "request"
}

ohos_static_library("request_static") {
  include_dirs = [
    "include",
    "../../native/include",
  ]

  public_configs = [ ":upload_public_config" ]

  sources = [
    "src/app_state_callback.cpp",
    "src/async_call.cpp",
    "src/js_initialize.cpp",
    "src/js_notify_data_listener.cpp",
    "src/js_response_listener.cpp",
    "src/js_task.cpp",
    "src/legacy/download_task.cpp",
    "src/legacy/request_manager.cpp",
    "src/listener_list.cpp",
    "src/napi_utils.cpp",
    "src/request_event.cpp",
    "src/request_module.cpp",
    "src/upload/async_call.cpp",
    "src/upload/curl_adp.cpp",
    "src/upload/file_adapter.cpp",
    "src/upload/js_util.cpp",
    "src/upload/obtain_file.cpp",
    "src/upload/upload_task.cpp",
    "src/upload/upload_task_napiV5.cpp",
    "src/utf8_utils.cpp",
    "src/uv_queue.cpp",
  ]

  deps = [
    "../../../common:request_common_static",
    "../../native:request_native",
    "//third_party/libuv:uv",
    "//third_party/openssl:libssl_shared",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:data_ability_helper",
    "ability_runtime:napi_base_context",
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_single",
    "napi:ace_napi",
    "netmanager_base:net_conn_manager_if",
    "storage_service:storage_manager_acl",
  ]

  subsystem_name = "request"
  part_name = "request"
}
